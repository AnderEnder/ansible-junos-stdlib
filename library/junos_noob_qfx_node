#!/usr/bin/env python2.7

DOCUMENTATION = '''
---
module: junos_qfxmode
version_added: 0.1.5
short_description: QFX mode setup
description:
   - Fun with Junos
author: Jeremy Schulman
'''
import sys
import logging

sys.path.insert(0,'/home/jeremy/Python/py-junos-netconify/lib')

EXAMPLES = '''
TBD
'''

from netconify.cmdo import *

def main():
  module = AnsibleModule(
    argument_spec = dict(
      port=dict(required=True),
      name=dict(required=True),
      mode=dict(required=False, default=None, choices=['node','switch']),
      gather_facts=dict(required=False, default=False),
      logfile=dict(required=False, default=None),
      savedir=dict(required=False)
    ),
    supports_check_mode = True
  )

  args = []
  args.append(module.params['port'])
  if module.params['mode'] is not None:
    args.append('--qfx-'+module.params['mode'])
  if module.params['gather_facts'] is not False:
    args.append('--facts')
  if module.check_mode is True:
    args.append('--dry-run')
  if module.params['savedir'] is not None:
    args.append('--savedir='+module.params['savedir'])

  args.append(module.params['name'])


  logfile = module.params['logfile']
  if logfile is not None:
    logging.basicConfig(filename=logfile, level=logging.INFO,
      format='%(asctime)s:%(name)s:%(message)s')
    logging.getLogger().name = 'NETCONIFY:'+module.params['name']
    def log_notify(event,message):
      logging.info("%s:%s"%(event,message))
    use_notifier = log_notify
  else:
    def silent_notify(event,message): pass
    use_notifier = silent_notify

  nc = netconifyCmdo(notify=use_notifier)
  nc.run( args )

  results = dict(changed=nc.changed)
  results['args'] = args

  module.exit_json(**results)

from ansible.module_utils.basic import *
main()

